import asyncio
import random
from telethon import TelegramClient, functions
from telethon.errors import ChatAdminRequiredError
import time

api_id, api_hash = input("–í–≤–µ–¥–∏—Ç–µ API: "), input("–í–≤–µ–¥–∏—Ç–µ HASH: ")

client = TelegramClient("programm", api_id, api_hash)

COMMENT_TEXT = """üöÄ –ò—â–µ—à—å –Ω–∞–¥–µ–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ IT-–ø—Ä–æ–µ–∫—Ç–æ–≤?  
ScriptSquad —Å–æ–∑–¥–∞–µ—Ç —Å–æ—Ñ—Ç, —Å–∞–π—Ç—ã, –±–æ—Ç—ã, –∏–≥—Ä—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ ‚Äî –±—ã—Å—Ç—Ä–æ, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –ø–æ–¥ –∫–ª—é—á!  
üíª –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.  
üî• –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª (https://t.me/ScriptSquadMain), —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏–ª–∏ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:  
#–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞–ù–∞–ó–∞–∫–∞–∑ #ScriptSquad #IT–†–µ—à–µ–Ω–∏—è  

(–ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É ‚Äî —Ç–∞–º –º–Ω–æ–≥–æ –∫—Ä—É—Ç—ã—Ö –∫–µ–π—Å–æ–≤! üòâ)"""


async def send_comment(peer):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        await client.send_message(
            peer,
            COMMENT_TEXT,
            link_preview=False
        )
        print(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer}: {e}")


async def process_stories():
    async for dialog in client.iter_dialogs():
        if dialog.is_group or dialog.is_channel:
            print(f'–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥: {dialog.title}')
            try:
                async for user in client.iter_participants(dialog.entity):
                    if user.stories_unavailable or user.stories_hidden:
                        continue
                    if user.stories_max_id:
                        try:
                            print(f'–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}')

                            if hasattr(user, 'stories_max_id') and isinstance(user.stories_max_id, int):
                                max_id_value = user.stories_max_id
                                print(f'–ó–Ω–∞—á–µ–Ω–∏–µ max_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {max_id_value}')
                            else:
                                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ stories_max_id –∏–ª–∏ –æ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω.')
                                max_id_value = None

                            if max_id_value and max_id_value > 0:
                                stories = await client(functions.stories.ReadStoriesRequest(
                                    peer=user,
                                    max_id=max_id_value
                                ))
                                print(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è: {user.id}")
                            else:
                                stories = await client(functions.stories.ReadStoriesRequest(
                                    peer=user
                                ))
                                print(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è: {user.id}")

                            print(f'–û–±—ä–µ–∫—Ç stories: {stories}')

                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–æ—Ä–∏—Å
                            await send_comment(user.id)

                            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –æ—Ç 3 –¥–æ 5 –º–∏–Ω—É—Ç
                            delay = random.randint(180, 300)
                            print(f"–û–∂–∏–¥–∞–Ω–∏–µ {delay} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–æ—Ä–∏—Å...")
                            await asyncio.sleep(delay)

                        except Exception as e:
                            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏—Å—Ç–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}')
            except ChatAdminRequiredError:
                print(f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑: {dialog.title}. –ü—Ä–æ–ø—É—Å–∫...')
            except Exception as e:
                print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑: {dialog.title}. {e}')


async def main():
    try:
        async with client:
            await client.start()
            while True:
                await process_stories()
                print()
                await asyncio.sleep(300)  # –ü–∞—É–∑–∞ 5 –º–∏–Ω—É—Ç –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤
    except KeyboardInterrupt:
        print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")


if __name__ == "__main__":
    asyncio.run(main())